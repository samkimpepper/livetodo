// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// TodoItemsColumns holds the columns for the "todo_items" table.
	TodoItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "done", Type: field.TypeBool, Default: false},
		{Name: "due_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "todo_list_items", Type: field.TypeInt, Nullable: true},
	}
	// TodoItemsTable holds the schema information for the "todo_items" table.
	TodoItemsTable = &schema.Table{
		Name:       "todo_items",
		Columns:    TodoItemsColumns,
		PrimaryKey: []*schema.Column{TodoItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "todo_items_todo_lists_items",
				Columns:    []*schema.Column{TodoItemsColumns[5]},
				RefColumns: []*schema.Column{TodoListsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TodoListsColumns holds the columns for the "todo_lists" table.
	TodoListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// TodoListsTable holds the schema information for the "todo_lists" table.
	TodoListsTable = &schema.Table{
		Name:       "todo_lists",
		Columns:    TodoListsColumns,
		PrimaryKey: []*schema.Column{TodoListsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "username", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserTodoListsColumns holds the columns for the "user_todo_lists" table.
	UserTodoListsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "todo_list_id", Type: field.TypeInt},
	}
	// UserTodoListsTable holds the schema information for the "user_todo_lists" table.
	UserTodoListsTable = &schema.Table{
		Name:       "user_todo_lists",
		Columns:    UserTodoListsColumns,
		PrimaryKey: []*schema.Column{UserTodoListsColumns[0], UserTodoListsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_todo_lists_user_id",
				Columns:    []*schema.Column{UserTodoListsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_todo_lists_todo_list_id",
				Columns:    []*schema.Column{UserTodoListsColumns[1]},
				RefColumns: []*schema.Column{TodoListsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		TodoItemsTable,
		TodoListsTable,
		UsersTable,
		UserTodoListsTable,
	}
)

func init() {
	TodoItemsTable.ForeignKeys[0].RefTable = TodoListsTable
	UserTodoListsTable.ForeignKeys[0].RefTable = UsersTable
	UserTodoListsTable.ForeignKeys[1].RefTable = TodoListsTable
}
